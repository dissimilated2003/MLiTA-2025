/*
    ВОЛИК АНДРЕЙ ОЛЕГОВИЧ ПС-23

	11.10. Газон (6)

		Фермер Иван с юности следит за своим газоном. Газон можно считать плоскостью, 
	на которой в каждой точке с целыми координатами растет один пучок травы. В одно из 
	воскресений Иван воспользовался газонокосилкой и постриг некоторый прямоугольный участок 
	газона. Стороны этого участка параллельны осям координат, а две противоположные вершины 
	расположены в точках (x1, y1) и (x2, y2). Следует отметить, что пучки травы, находящиеся 
	на границе этого прямоугольника, также были пострижены. Довольный результатом Иван купил 
	и установил на газоне дождевальную установку. Она была размещена в точке с координатами 
	(x3, y3) и имела радиус действия струи r. Таким образом, установка начала поливать все 
	пучки, расстояние от которых до точки (x3, y3) не превышало r. Все было хорошо, но Ивана 
	заинтересовал следующий вопрос: сколько пучков травы оказалось и пострижено, и полито 
	в это воскресенье? Требуется написать программу, которая позволит дать ответ на вопрос Ивана.

		Ввод из файла INPUT.TXT. В первой строке содержатся четыре целых числа x1, y1, x2, y2 
	(−100 000 ≤ x1 < x2 ≤ 100 000; −100 000 ≤ y1 < y2 ≤ 100 000). Во второй строке входного 
	файла содержатся три целых числа x3, y3, r (−100 000 ≤ x3, y3 ≤ 100 000; 1 ≤ r ≤ 100 000)

		Вывод в файл OUTPUT.TXT. Вывести одно число - количество пучков травы, которые были 
	и пострижены, и политы.

	Источник: --
*/

#include <iostream>
#include <fstream>
#include <cstdint>

long long x_1{}, y_1{}, x_2{}, y_2{}, x_3{}, y_3{};
long long count{}, r{}, y{};

long long CalculateGrass(long long x, long long z1, long long z2)
{
	long long min{}, max{}, k{};

	if (x < x_1 || x > x_2 || z1 > y_2 || z2 < y_1)
	{
		k = 0;
	}
	else 
	{
		min = y_1;
		if (z1 > y_1)
		{
			min = z1;
		}

		max = y_2;
		if (z2 < y_2)
		{
			max = z2;
		}

		k = max - min + 1;
	}

	return k;
}

inline void ViewGazon()
{
	std::cout << x_1 << " " << y_1 << " " << x_2 << " " << y_2 << "\n";
	std::cout << x_3 << " " << y_3 << " " << r << "\n\n";
}

int main()
{
	std::fstream input{ "input.txt" };
	std::ofstream output{ "output.txt" };
	input >> x_1 >> y_1 >> x_2 >> y_2 >> x_3 >> y_3 >> r;

	count = CalculateGrass(x_3, y_3 - r, y_3 + r);
	y = r;
	for (long long x = 1; x <= r - 1; x++)
	{
		while ((x * x) + (y * y) > r * r)
		{
			y = y - 1;
		}

		count = count + CalculateGrass(x_3 + x, y_3 - y, y_3 + y) + CalculateGrass(x_3 - x, y_3 - y, y_3 + y);
	}

	count = count + CalculateGrass(x_3 + r, y_3, y_3) + CalculateGrass(x_3 - r, y_3, y_3);
	
	ViewGazon();
	std::cout << count << "\n";
	output << count << "\n";
}