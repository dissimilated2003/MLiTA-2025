/*
    ВОЛИК АНДРЕЙ ОЛЕГОВИЧ ПС-23

    10.5. Последовательность 3 (5)

        Задана неубывающая последовательность целых чисел. Найти количество пар 
    чисел с заданной разностью D.
        Ввод из файла INPUT.TXT. В первой строке задаются через пробел 
    два целых числа: количество членов последовательности N и разность D 
    (2 ≤ N ≤ 10^6, 1 ≤ D ≤ 10^9). Во второй строке вводятся через пробел N натуральных 
    чисел последовательности A1 ≤ A2 ≤ ... ≤ AN  (Ai ≤ 10^9).
        Вывод в файл OUTPUT.TXT. Вывести число пар (Ai, Aj) таких, что Ai – Aj = D.
    Ограничения: Объем используемой памяти до 1 Мб.

    Пример:
    input.txt:
        10 7
        3 5 12 18 25 40 47 47 48 49
    output.txt:
        4

    Источник: --
*/

#include <cstddef>
#include <iostream>
#include <fstream>
#include <chrono>
#include <iomanip>
#include <new>
#include <atomic>
#include <cstdint>

std::atomic<uint64_t> kBytesAllocated{0};

void* operator new(std::size_t count) 
{
    kBytesAllocated.fetch_add(count);
    return std::malloc(count);
}

void operator delete(void* ptr) 
{
    std::free(ptr);
}

int CalculatePairsWithDifference(std::ifstream &input, int n, int d) {
    long long count = 0; 
    int* numbers = new int[n];
    for (int i = 0; i < n; ++i) 
    {
        input >> numbers[i];
    }

    int i = 0, j = 0;

    while (j < n) 
    {
        int diff = numbers[j] - numbers[i];
        if (diff == d) 
        {
            int count_i = 1, count_j = 1;
            while (i + 1 < n && numbers[i] == numbers[i + 1]) 
            {
                count_i++;
                i++;
            }

            while (j + 1 < n && numbers[j] == numbers[j + 1]) 
            {
                count_j++;
                j++;
            }
            count += count_i * count_j;
            i++;
            j++;

        } 
	else if (diff < d) 
        {
            j++;
        } 
	else 
	{
            i++;
        }

        if (i == j) 
        {
            j++;
        }
    }

    delete[] numbers;
    return count;
}

int main() 
{
    auto start = std::chrono::high_resolution_clock::now();

    std::ifstream input("input.txt");
    int n, diff;
    input >> n >> diff;
    std::cout << "N = " << n << ", D = " << diff << "\n";

    int result = CalculatePairsWithDifference(input, n, diff);

    std::ofstream output("output.txt");
    output << result << "\n";
    std::cout << "\n" << result << "\n\n";

    auto end = std::chrono::high_resolution_clock::now();
    std::chrono::duration<double, std::milli> elapsed = end - start;
    double elapsed_seconds = elapsed.count() / 1000.0;
    std::cout << std::fixed << std::setprecision(3) << elapsed_seconds << " sec." << "\n";

    float bytesAllocated = static_cast<float>(kBytesAllocated);
    float kbAllocated = bytesAllocated / 1024.0f;
    float mBytesAllocated = kbAllocated / 1024.0f;
    std::cout << "Bytes allocated on heap: " << bytesAllocated << "\n";
    std::cout << "Kilobytes: " << kbAllocated << "\n";
    std::cout << "Megabytes: " << mBytesAllocated << "\n";
    return 0;
}